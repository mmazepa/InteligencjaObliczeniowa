}
duzyPlecakGenAlg1 <- system.time(rbga.bin(size = 60, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc3))
duzyPlecakGenAlg2 <- system.time(rbga.bin(size = 120, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc4))
duzyPlecakGenAlg3 <- system.time(rbga.bin(size = 200, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc5))
czasy <- c(duzyPlecakGenAlg1[["elapsed"]][1], duzyPlecakGenAlg2[["elapsed"]][1], duzyPlecakGenAlg3[["elapsed"]][1])
rozmiary <- c(60, 120, 200)
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="green")
# -----------------------------------------------------------------------
czasy
plot(rozmiary, czasy, type="d", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="green")
plot(rozmiary, czasy, type="p", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="green")
plot(rozmiary, czasy, type="p", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="violet")
plot(rozmiary, czasy, type="p", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="purple")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="purple")
plot(rozmiary, czasy, type="l", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="purple")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="purple")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="darkgreen")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="darkgreen", bg="red")
czasy <- c(duzyPlecakGenAlg1[["elapsed"]][1], duzyPlecakGenAlg2[["elapsed"]][1], duzyPlecakGenAlg3[["elapsed"]][1])
rozmiary <- c(60, 120, 200)
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
col="darkgreen", bg="red")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="darkgreen", bg="red")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=1, col="darkgreen", bg="red")
plot(chartData$maksymalne, type="l",
main="Działanie Alg. Genetycznego",
xlab="pokolenie", ylab="fitness (ocena)",
col="red")
lines(chartData$srednia, col="blue")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=1, col="darkgreen", bg="red")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="darkgreen")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=15, col="darkgreen")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=14, col="darkgreen")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=21, col="darkgreen")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="darkgreen")
lines(rozmary, czasy, type="p" col="blue")
lines(rozmary, czasy, type="p", col="blue")
lines(rozmiary, czasy, type="p", col="blue")
lines(rozmiary, czasy, type="p", pch=16, col="blue")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="darkgreen")
lines(rozmiary, czasy, type="p", pch=16, col="red")
lines(rozmiary, czasy, type="p", pch=16, col="green")
lines(rozmiary, czasy, type="p", pch=16, col="black")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="green")
lines(rozmiary, czasy, type="p", pch=16, col="darkgreen")
lines(rozmiary, czasy, type="p", pch=16, col="limegreen")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="darkred")
lines(rozmiary, czasy, type="p", pch=16, col="red")
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="green")
lines(rozmiary, czasy, type="p", pch=16, col="darkgreen")
# LABORATORIUM 3
# -----------------------------------------------------------------------
# ZADANIE 1
# a)
#install.packages("genalg")
#library(genalg)
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:100,30),
waga = sample(10:100,30))
duzyLimit <- 600
fitnessFunc2 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
duzyPlecakGenAlg <- rbga.bin(size = 30, popSize = 200, iters = 50,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2)
# b)
chartData <- data.frame(srednia = -duzyPlecakGenAlg$mean,
maksymalne = -duzyPlecakGenAlg$best)
# c)
plot(chartData$maksymalne, type="l",
main="Działanie Alg. Genetycznego",
xlab="pokolenie", ylab="fitness (ocena)",
col="red")
# d)
lines(chartData$srednia, col="blue")
# e)
legend("bottomright", c("srednia", "maksymalnie"),
lty=c(1,1), col=c("blue", "red"), title = "legenda")
# ZADANIE 2
duzyProblemPlecakowy1 <- data.frame(wartosc = sample(10:300,60),
waga = sample(10:300,60))
duzyProblemPlecakowy2 <- data.frame(wartosc = sample(10:300,120),
waga = sample(10:300,120))
duzyProblemPlecakowy3 <- data.frame(wartosc = sample(10:300,200),
waga = sample(10:300,200))
fitnessFunc3 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy1$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy1$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
fitnessFunc4 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy2$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy2$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
fitnessFunc5 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy3$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy3$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
duzyPlecakGenAlg1 <- system.time(rbga.bin(size = 60, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc3))
duzyPlecakGenAlg2 <- system.time(rbga.bin(size = 120, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc4))
duzyPlecakGenAlg3 <- system.time(rbga.bin(size = 200, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc5))
czasy <- c(duzyPlecakGenAlg1[["elapsed"]][1],
duzyPlecakGenAlg2[["elapsed"]][1],
duzyPlecakGenAlg3[["elapsed"]][1])
rozmiary <- c(60, 120, 200)
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="green")
lines(rozmiary, czasy, type="p", pch=16, col="darkgreen")
# -----------------------------------------------------------------------
# LABORATORIUM 3
# -----------------------------------------------------------------------
# ZADANIE 1
# a)
#install.packages("genalg")
#library(genalg)
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:100,30),
waga = sample(10:100,30))
duzyLimit <- 600
fitnessFunc2 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
duzyPlecakGenAlg <- rbga.bin(size = 30, popSize = 200, iters = 50,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2)
# b)
chartData <- data.frame(srednia = -duzyPlecakGenAlg$mean,
maksymalne = -duzyPlecakGenAlg$best)
# c)
plot(chartData$maksymalne, type="l",
main="Działanie Alg. Genetycznego",
xlab="pokolenie", ylab="fitness (ocena)",
col="red")
# d)
lines(chartData$srednia, col="blue")
# e)
legend("bottomright", c("srednia", "maksymalnie"),
lty=c(1,1), col=c("blue", "red"), title = "legenda")
# ZADANIE 2
duzyProblemPlecakowy1 <- data.frame(wartosc = sample(10:300,60),
waga = sample(10:300,60))
duzyProblemPlecakowy2 <- data.frame(wartosc = sample(10:300,120),
waga = sample(10:300,120))
duzyProblemPlecakowy3 <- data.frame(wartosc = sample(10:300,200),
waga = sample(10:300,200))
fitnessFunc3 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy1$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy1$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
fitnessFunc4 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy2$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy2$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
fitnessFunc5 <- function(chr)
{
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy3$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy3$waga
if (calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
duzyPlecakGenAlg1 <- system.time(rbga.bin(size = 60, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc3))
duzyPlecakGenAlg2 <- system.time(rbga.bin(size = 120, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc4))
duzyPlecakGenAlg3 <- system.time(rbga.bin(size = 200, popSize = 200, iters = 100,
mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc5))
czasy <- c(duzyPlecakGenAlg1[["elapsed"]][1],
duzyPlecakGenAlg2[["elapsed"]][1],
duzyPlecakGenAlg3[["elapsed"]][1])
rozmiary <- c(60, 120, 200)
plot(rozmiary, czasy, type="o", main="Działanie Alg. Genetycznego 2",
xlab="Długość chromosomu", ylab="Czas trwania obliczeń",
pch=16, col="green")
lines(rozmiary, czasy, type="p", pch=16, col="darkgreen")
# -----------------------------------------------------------------------
# LABORATORIUM 4
# -----------------------------------------------------------------------
dirty.iris <- read.csv("dirty_iris.csv", header=TRUE, sep=",")
nrow(subset(dirty.iris, is.finite(Sepal.Length) & is.finite(Sepal.Width)
& is.finite(Petal.Length) & is.finite(Petal.Width)))
install.packages("editrules")
library(editrules)
E <- editset(c("Sepal.Length <= 30"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
plot(ve)
# -----------------------------------------------------------------------
getwd()
setwd(/home/mariusz/Pulpit)
getwd()
setwd(home/mariusz/Pulpit)
setwd(Pulpit)
getwd()
setwd("home/mariusz/Pulpit")
setwd("/home/mariusz/Pulpit")
getwd()
setwd("/home/mariusz/Pulpit/io/lab4")
getwd()
library(editrules)
setwd("/home/mariusz/Pulpit/io/lab4")
# LABORATORIUM 4
# -----------------------------------------------------------------------
setwd("/home/mariusz/Pulpit/io/lab4")
dirty.iris <- read.csv("dirty_iris.csv", header=TRUE, sep=",")
nrow(subset(dirty.iris, is.finite(Sepal.Length) & is.finite(Sepal.Width)
& is.finite(Petal.Length) & is.finite(Petal.Width)))
#install.packages("editrules")
#library(editrules)
E <- editset(c("Sepal.Length <= 30"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
plot(ve)
# -----------------------------------------------------------------------
ve
plot(ve)
View(dirty.iris)
View(dirty.iris)
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'"))
E
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
View(dirty.iris)
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
View(E)
E <- editset(c("Sepal.Length <= 30",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
View(E)
# LABORATORIUM 4
# -----------------------------------------------------------------------
# ZADANIE 1
setwd("/home/mariusz/Pulpit/io/lab4")
dirty.iris <- read.csv("dirty_iris.csv", header=TRUE, sep=",")
nrow(subset(dirty.iris, is.finite(Sepal.Length) & is.finite(Sepal.Width)
& is.finite(Petal.Length) & is.finite(Petal.Width)))
#install.packages("editrules")
#library(editrules)
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
plot(ve)
# ZADANIE 2
# -----------------------------------------------------------------------
ve <- violatedEdits(E, dirty.iris)
nrow(violatedEdits(E, dirty.iris))
violatedEdits(E, dirty.iris)
ve
ve <- violatedEdits(E, dirty.iris)
# LABORATORIUM 4
# -----------------------------------------------------------------------
# ZADANIE 1
# a)
setwd("/home/mariusz/Pulpit/io/lab4")
dirty.iris <- read.csv("dirty_iris.csv", header=TRUE, sep=",")
nrow(subset(dirty.iris, is.finite(Sepal.Length) & is.finite(Sepal.Width)
& is.finite(Petal.Length) & is.finite(Petal.Width)))
# b) & c)
#install.packages("editrules")
#library(editrules)
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
plot(ve)
# d)
nrow(violatedEdits(E, dirty.iris))
# ZADANIE 2
# -----------------------------------------------------------------------
# LABORATORIUM 4
# -----------------------------------------------------------------------
# ZADANIE 1
# a)
setwd("/home/mariusz/Pulpit/io/lab4")
dirty.iris <- read.csv("dirty_iris.csv", header=TRUE, sep=",")
nrow(subset(dirty.iris, is.finite(Sepal.Length) & is.finite(Sepal.Width)
& is.finite(Petal.Length) & is.finite(Petal.Width)))
# b) & c)
#install.packages("editrules")
#library(editrules)
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal > Petal"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
plot(ve)
# d)
# nrow(violatedEdits(E, dirty.iris))
# ZADANIE 2
# -----------------------------------------------------------------------
View(dirty.iris)
E <- editset(c("Sepal.Length <= 30",
"Species == 'setosa' | Species == 'versicolor' | Species == 'virginica'",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal.Length > Petal.Length",
"Sepal.Width > Petal.Width"))
E
ve <- violatedEdits(E, dirty.iris)
ve
species = c("setosa", "versicolor", "virginica")
E <- editset(c("Sepal.Length <= 30",
"Species %in% species",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal.Length > Petal.Length",
"Sepal.Width > Petal.Width"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
plot(ve)
plot(ve)
# LABORATORIUM 4
# -----------------------------------------------------------------------
# ZADANIE 1
# a)
setwd("/home/mariusz/Pulpit/io/lab4")
dirty.iris <- read.csv("dirty_iris.csv", header=TRUE, sep=",")
nrow(subset(dirty.iris, is.finite(Sepal.Length) & is.finite(Sepal.Width)
& is.finite(Petal.Length) & is.finite(Petal.Width)))
# b) & c)
#install.packages("editrules")
#library(editrules)
species = c("setosa", "versicolor", "virginica")
E <- editset(c("Sepal.Length <= 30",
"Species %in% species",
"Sepal.Length > 0",
"Sepal.Width > 0",
"Petal.Length > 0",
"Petal.Width > 0",
"Petal.Length >= 2*Petal.Width",
"Sepal.Length > Petal.Length",
"Sepal.Width > Petal.Width"))
E
ve <- violatedEdits(E, dirty.iris)
ve
summary(ve)
#plot(ve)
# d)
# nrow(violatedEdits(E, dirty.iris))
# ZADANIE 2
# -----------------------------------------------------------------------
nrow(violatedEdits(E, dirty.iris))
nrow(ve)
nrow(violatedEdits(E, dirty.iris))
summary(ve)
nrow(violatedEdits(E, dirty.iris))
ve
summary(ve)
install.packages("deducorrect")
library(deducorrect)
E.type
E
correctWithRules(E, dirty.irys)
correctWithRules(E, dirty.iris)
