function(e) {
  var response = {};

  // --- my Tank -------------
  var me = e.data.myTank;
  var myCtrl = me.controls;
  var mb1 = e.data.myTank.bullets[0] || 0;
  var mb2 = e.data.myTank.bullets[1] || 0;
  var mb3 = e.data.myTank.bullets[2] || 0;

  // --- enemy Tank ----------
  var enemy = e.data.enemyTank;
  var eb1 = enemy.bullets[0] || 0;
  var eb2 = enemy.bullets[1] || 0;
  var eb3 = enemy.bullets[2] || 0;

  // --- current game Time ---
  var cgt = e.data.currentGameTime;

  var input = [me.x/500.0,
               me.y/500.0,
               me.rotation/360.0,
               me.cannonRotation/360.0,
               me.velocityX%16,
               me.velocityY%16,
               me.accelerationX/0.05,
               me.accelerationY/0.05,
               me.shootCooldown/100,
               //~ mb1.x/500.0,
               //~ mb1.y/500.0,
               //~ mb1.velocityX,
               //~ mb1.velocityY,
               //~ mb2.x/500.0,
               //~ mb2.y/500.0,
               //~ mb2.velocityX,
               //~ mb2.velocityY,
               //~ mb3.x/500.0,
               //~ mb3.y/500.0,
               //~ mb3.velocityX,
               //~ mb3.velocityY,
               enemy.x/500.0,
               enemy.y/500.0//,
               //~ enemy.rotation/360.0,
               //~ enemy.cannonRotation/360.0,
               //~ enemy.velocityX%16,
               //~ enemy.velocityY%16,
               //~ enemy.accelerationX/0.05,
               //~ enemy.accelerationY/0.05,
               //~ enemy.shootCooldown/100,
               //~ eb1.x/500.0,
               //~ eb1.y/500.0,
               //~ eb1.velocityX,
               //~ eb1.velocityY,
               //~ eb2.x/500.0,
               //~ eb2.y/500.0,
               //~ eb2.velocityX,
               //~ eb2.velocityY,
               //~ eb3.x/500.0,
               //~ eb3.y/500.0,
               //~ eb3.velocityX,
               //~ eb3.velocityY,
               /*cgt/40000.0*/];

  var weights1 = [-0.937385124203449, -0.600910857250053, 0.200916626847297, 0.579832181561459, -2.01190917184579, 2.81532547447982, -0.0320465774804056, 0.894319469768203, 1.919170241387, 0.222354610498307, 0.445648738392846, 0.825411108240798, -0.419527424024151, 0.364551812553362, -1.08549708528213, -0.129871668122929, 0.493327427717642, 1.10976806241723, -1.12269228569868, -0.124106905213366, 0.427018253999395, -0.76194349102623, 0.392460675591194, 0.138923528800834, 0.210390016691724, -0.084887729790034, -1.36572090176916, 0.241594771384549, 0.395012170425351, -0.86383922368784, 0.144790136657207, 0.174389955437423, 0.110456296434787, -0.434108374076738, -0.758787005798631, 0.222944233501123, -0.429054287703319, -0.289501449243601, 0.978540886203217, -1.39191718066133, 0.921772425930711, -0.282710469188444, -0.497620749669633, -0.597932402905584, 0.0871239180110806, 0.512629617826875, 0.896835428513643, -1.43216099841584, 2.14144490136476, -0.580869942505749, -0.0711091579262468, -2.29223536158654, 0.0501392477926475, -0.24168651096853, -0.23072606381535, 1.03950492742175, 0.235906092111947, -0.243176211634025, 0.443546345290733, -1.7164706937056, 1.29566725691008, -1.74702331087981, 0.622210221476461, 1.1959655604026, 1.0043142912239, 0.225700077947014, -0.176618609999776, 0.304201785035396, -0.129276657608909, 0.895835377951792, 0.635661016199914, 1.14067525284867, 0.247920121550291, 0.670142020900897, 0.879289953575094, -0.260106768341044, 0.404721075583463, -0.301710162813521, 0.684039561277269, -0.368761640660335, 0.150411372274543, -1.74339138327074, -0.0168584107807088, 0.472381490044537, -0.0624584386669626, -1.15435010017997, -0.737643511872961, 0.0579365438707514, -0.0593777602951067, -0.539943262490667, -0.0474485875026132, -0.433092912657965, -0.846611825997873, -1.44225100593828, -1.89038390898409, -1.60614004818804, 0.221584277338889, 0.0978348972010378, -0.616081846929915, -0.152527536414114, -0.978543044247844, 0.759174792829587, -0.608776875247277, -0.0105147124161247, -0.0354873582394369, -0.0625941053463361, -0.351267906637454, 0.346435169370278, -0.514508692860828, -0.604556032627948, 0.58068279211446, -0.129447252566931, 0.25070150713708, -0.857313523700845, -1.9197480383888, 0.466499071404341, 0.400673713243694, -0.519019607752111, -0.408566822286833, -0.196173958764399, -0.732728775867194, 0.802537844602152, 0.554080047388163, -0.22955259339186, -0.63146486158828, 0.453004315640241, -0.883577723783826, 1.56489058166003, -1.36592362617336, -1.44661713061139, -0.234642452501362, -0.538084969168771, -0.313648380544499, -0.322699363194993, 0.422417279120402, -0.133596681477627, 0.703142871994344, -1.16829263823823, -0.954603188855916, 0.0310558915601968, 0.0625732853225445, -0.59023888212796, -0.0902912916655338, -0.614581998892987, -0.672955231588141, 0.66444908009804, -0.0636877181096144, 2.38305484200595, 0.0244245283585348, -0.198348830236061, 0.348060693155452, 1.3484729974745, 0.298569416595849, 0.314940932505324, 1.1447291452236, 0.486738942695769, 0.0176023201748022, -0.517693856529843, -0.313744032236989, 0.287768165671392, 1.04357635718901, 1.08509019701763, 0.339260526930283, 0.272597825278918, -0.263273638148178];
  var bias1 = [-0.234636145726015, -0.267220613391731, -0.190231607315004, 0.302098637604737, -2.13693873400257, 1.02976518453098, 0.595857061633055, -0.165391824165696, 1.40681761250022, 0.937745250006942, 0.0955149408150958, -0.379900004490872, -0.238784019827354, 1.28818362057413, 1.92616651859627];
  var hidden = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

  var i, j;
  for (i = 0; i < 15; i++) {
    for (j = 0; j < 11; j++) {
      hidden[i] = input[j] * weights1[i*11+j];
    }
    hidden[i] = hidden[i] + bias1[i];
    hidden[i] = 1/(1 + Math.pow(Math.E, -hidden[i]));
  }
  //~ console.log("[hidden]: " + hidden);

  var weights2 = [-0.514139201016734, -0.52477356962151, -0.509560898755658, -0.496976805712349, -0.0379374994922342, -0.588808443553053, 0.296510259286878, -0.582126361203355, 0.396487999034952, 0.415041002353179, -0.126570732917236, 0.341409656442094, -0.614113031678726, 1.61705229839745, 2.07603932130265, 0.293950491138823, -0.493596382634699, 0.998382475942546, 0.487196502579073, -0.451966751849433, 0.251730135645711, -0.552785928612155, 0.362335256511379, 0.68100854141974, 0.0558621760642058, 0.136139432697403, 0.666770591964455, -0.618161538851808, 1.43386288509441, -0.231466933194233, -0.312505095521661, 1.25856471510505, -0.721741604898651, -1.40914235018539, 0.0688427195531333, 2.05802640363602, -0.671028783993311, 2.55042424808182, 0.0945422138710748, 1.04178657454422, -1.4040243541974, -1.22782456747925, -0.132133012097703, -0.770600757624128, -0.729366938293647, 1.63804974944103, 0.0950553328647293, 0.775607396053311, -0.134399237338547, -0.493058354459888, -0.805400341533453, -0.511928188471476, 0.513023936614855, -0.786528093389887, 0.995254047913969, -1.05468910936347, 2.01659069424266, -1.76502401143502, -0.474868352446931, -0.907941910079772, 0.826740306582142, 1.50092842747532, 0.121015706361514, -0.131455508746004, -0.300836183557066, -1.12390609602915, 1.52994107390376, 0.725732772957035, -0.35618312455425, -0.108326664147896, -1.80004697145626, 0.518783424108498, 0.839241528854445, -1.55274831852059, 0.0802611215351129, -0.244245308599998, 0.635342304259254, -1.00012411605904, -0.375054797675582, -0.342948530797684, 0.721498273655301, 0.914327346224381, 0.0722475927049406, -0.216442128650331, -0.623872763463827, 0.129674286981825, -0.0252149278046504, 1.72686075196521, 1.43799110587901, -0.90850867950254, -0.487114019534245, -0.00587291102952123, 0.700708764223867, -0.117664207795409, 0.582186184491303, 0.975897124444884, -0.471582824297429, 0.396647842009123, 2.22727773236592, 0.119970318752794, -1.62815855545892, -0.190710179459018, 0.98057950904622, -0.894630219917188, 0.0521380416796969];
  var bias2 = [-1.98566876200505, -1.21921378579828, 0.691255487523435, 1.11583330519558, 0.276314624027417, -1.16264793520366, 0.592292617250157];
  var output = [0, 0, 0, 0, 0, 0, 0];

  for (i = 0; i < 7; i++) {
    for (j = 0; j < 15; j++) {
      output[i] = hidden[j] * weights2[i*15+j];
    }
    output[i] = output[i] + bias2[i];
    output[i] = 1/(1 + Math.pow(Math.E, -output[i]));
    output[i] = Math.round(output[i]);
  }
  //~ console.log("[output]: " + output);

  response.turnLeft = output[0];
  response.turnRight = output[1];
  response.goForward = output[2];
  response.goBack = output[3];
  response.shoot = output[4];
  response.cannonLeft = output[5];
  response.cannonRight = output[6];

  self.postMessage(response);
}
